{"mappings":"4vCAAA,IAAMA,EAAAC,EAAA,oBACAC,EAAAD,EAAA,0BACAA,EAAA,sBAEN,MAAME,EAAQ,IAAGH,EAAAI,aAAcC,UACzBC,EAAS,IAAGJ,EAAAK,aAAA,CAAgBC,KAAI,gBACtCL,EAAMM,kBAAkBH,GAExBH,EAAMO,SAASC,GAAGC,eACfC,MAAKH,GACGA,EAASI,UACbD,MAAKC,IACJC,EAAYD,GACZE,gBAAiB,EACjBC,oBAGLC,OAAMC,GAASC,QAAQC,IAAG,UAAWC,KAAKC,UAAUJ,EAAO,KAAM,QAEpEF,aAAYO,UACV,MAAMC,QAAsBnB,EAAOoB,OAAOC,mBACrCF,GAGHG,UAAYH,EAAcI,QAC1BC,SAASC,eAAc,UAAWC,QAAO,KAAWC,oBAAqBH,SAASI,SAASC,UAC3FL,SAASC,eAAc,UAAWK,UAAS,8BAC3CN,SAASC,eAAc,kBAAmBK,UAAS,sdAcnDC,aAAc,EACdC,KApBAR,SAASC,eAAc,kBAAmBK,WAAS,oFAwBvDG,eAAcf,UACZ,MAAMC,QAAsBnB,EAAOoB,OAAOC,mBAC1C,GAAKF,EASHG,UAAYH,EAAcI,YATR,CAClB,MAAMW,QAAoBlC,EAAOoB,OAAOe,mBAAkB,CACxDC,QAAO,CACLC,KAAMD,QACNE,OAAQvC,YAGZuB,UAAYY,EAAYX,QAItBb,iBACFc,SAASC,eAAc,UAAWC,QAAO,KAAWC,oBAAqBH,SAASI,SAASC,UAC3FL,SAASC,eAAc,UAAWK,UAAS,8BAC3CN,SAASC,eAAc,kBAAmBK,UAAS,sdAcnDC,aAAc,EACdC,MAIJL,kBAAiBT,eAAqBlB,EAAOuC,qBAE7C,MAAM9B,EAAeD,IACnBgC,KAAKC,OAAM,GACXD,KAAKE,OAAM,OAEN,MAAOC,EAAKC,KAAUpC,EAAQqC,MAAMC,SAAU,CACjDF,EAAMG,GAAKC,OAAOL,EAAIM,MAAM,GAAG,IAC/BL,EAAMM,OAASF,OAAOJ,EAAMM,QAC5BN,EAAMO,MAAQH,OAAOJ,EAAMO,OAC3BP,EAAMQ,SAAW,IAAIC,KAAKT,EAAMQ,UAChCR,EAAMU,SAAW,IAAID,KAAKT,EAAMU,UAChCV,EAAMW,WAAaP,OAAOJ,EAAMW,YAChC,MAAMC,EAAG,CAAKC,EAAGb,EAAMW,WAAa,KACpCC,EAAIE,GAAKd,EAAMW,WAAaC,EAAIC,GAAK,IAAM,IAC3CD,EAAIG,IAAMf,EAAMW,WAAaC,EAAIC,GAAK,IAAMD,EAAIE,GAAK,IAAM,IAC3Dd,EAAMgB,WAAaZ,OAAOJ,EAAMgB,YAChC,MAAMC,EAAG,CAAKJ,EAAGb,EAAMgB,WAAa,KACpCC,EAAIH,GAAKd,EAAMgB,WAAaC,EAAIJ,GAAK,IAAM,IAC3CI,EAAIF,IAAMf,EAAMgB,WAAaC,EAAIJ,GAAK,IAAMI,EAAIH,GAAK,IAAM,IAC3Dd,EAAMkB,MAAK,4HACkCD,EAAIF,KAAKE,EAAIH,KAAKG,EAAIJ,mGAE/Db,EAAMmB,QAAQC,MAAK,MAAOC,QAAM,CAAEC,EAAGC,IAAMD,EAAC,uCAA0CV,EAAIG,KAAKH,EAAIE,KAAKF,EAAIC,OAAOU,0CAGvH3B,KAAKC,OAAO2B,KAAKxB,OAEd,MAAOyB,EAAOC,KAAU9D,EAAQ+D,OAAOzB,SAAU,CACpD,MAAM0B,EAAMxD,KAAKyD,MAAMJ,GACvBC,EAAMI,SAAW1B,OAAOwB,EAAI,IAC5BF,EAAMK,MAAQH,EAAI,GAClBF,EAAMM,MAAQ5B,OAAOsB,EAAMM,OAC3BN,EAAMO,SAAW7B,OAAOsB,EAAMO,UAC9BP,EAAMQ,MAAQ9B,OAAOsB,EAAMQ,OAC3BtC,KAAKE,OAAO0B,KAAKE,KAIftC,EAAU,KACd,IAAK+C,aAAehD,YAAW,OAE/BjB,QAAQC,IAAIyB,KAAKC,QACjB3B,QAAQC,IAAIyB,KAAKE,QAEjB,MAAMsC,EAAUxC,KAAKC,OAAOwC,QAAOd,GAAKA,EAAEe,SAAW5D,YAAW6D,MAAI,CAAEjB,EAAGT,IAAOS,EAAEf,MAAQM,EAAEN,OAAWM,EAAEL,SAAWc,EAAEd,eACjH,MAAMgC,KAAKJ,EAAS,CACvB,MAAMK,EAAY7C,KAAKE,OAAOuC,QAAOd,GAAKA,EAAEO,UAAYU,EAAErC,KAAIkB,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAEW,OAASX,EAAEU,SAAW,EAAIV,EAAEW,MAAQZ,GAAGoB,EAAAA,GAC5H9D,SAASC,eAAc,kBAAmBK,WAAS,8CAAkDsD,EAAErC,gBACnGqC,EAAEtB,8CACuC,GAAXsB,EAAEjC,MAAU,2BAAgCiC,EAAEjC,MAAQ,EAAC,6BAA+B,6CACtFiC,EAAErC,uEAAuEqC,EAAEF,iDAClFG,IAAcC,EAAAA,EAAQ,uDAA0DD,EAAY,YAAc,mKAGxFD,EAAErC,8GACbqC,EAAEhC,SAASmC,cAAcvB,MAAK,MAAO,GAAGf,MAAM,GAAG,uDAK/D,GAAlB+B,EAAQQ,SACVhE,SAASC,eAAc,eAAgBK,UAAS,oDAGlD,MAAM2D,EAAejD,KAAKE,OAAOuB,QAAM,CAAEC,EAAGC,KAAYA,EAAEQ,OAASrD,WAAW4C,EAAEE,KAAKD,EAAEO,UAAkBR,IAAG,IACtGwB,EAAQlD,KAAKC,OAAOwC,QAAOd,GAAKsB,EAAaE,SAASxB,EAAEpB,MAAKkC,QAAOd,GAAKA,EAAEhB,OAAS,IAAGgC,MAAI,CAAEjB,EAAGT,IAAMA,EAAEL,SAAWc,EAAEd,eACtH,MAAMwC,KAAKF,EAAO,CACrB,MAAML,EAAY7C,KAAKE,OAAOuC,QAAOd,GAAKA,EAAEO,UAAYkB,EAAE7C,KAAIkB,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAEW,OAASX,EAAEU,SAAW,EAAIV,EAAEW,MAAQZ,GAAGoB,EAAAA,GAC5H9D,SAASC,eAAc,gBAAiBK,WAAS,8CAAkD8D,EAAE7C,gBACjG6C,EAAE9B,6EAE4B8B,EAAE7C,uEAAuE6C,EAAEV,iDAClFG,IAAcC,EAAAA,EAAQ,uDAA0DD,EAAY,YAAc,mKAGxFO,EAAE7C,8GACb6C,EAAExC,SAASmC,cAAcvB,MAAK,MAAO,GAAGf,MAAM,GAAG,uDAKjE,GAAhByC,EAAMF,SACRhE,SAASC,eAAc,eAAgBK,UAAS,qDAIpD+D,UAAa9C,IACX,MAAMqC,EAAI5C,KAAKC,OAAOM,GACtBvB,SAASC,eAAc,eAAgBK,UAAS,oIAEEsD,EAAErC,8DAE5CqC,EAAEtB,kGAGkCsB,EAAEF,QAAQjC,MAAM,EAAG,QAAQmC,EAAEF,QAAQjC,OAAM,4DACxCmC,EAAE9B,SAASiC,cAAcvB,MAAK,MAAO,wDACzC8B,SAASV,EAAEjC,kEACLiC,EAAElC,yBAC3C5B,UAAS,uCAA0CkB,KAAKE,OAAOuC,QAAOd,GAAKA,EAAEQ,OAASrD,WAAa6C,EAAEO,UAAYU,EAAErC,KAAIkB,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAES,OAAO,WAAS,4OAQxKmB,UAAahD,IACX,MAAMqC,EAAI5C,KAAKC,OAAOM,GAChBiD,EAAIxD,KAAKE,OAAOuC,QAAOd,GAAKA,EAAEQ,OAASrD,WAAa6C,EAAEO,UAAY3B,IAClEkD,EAAaD,EAAE/B,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAES,OAAO,GAC7CsB,EAAOF,EAAE/B,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAEU,UAAU,GAC1CC,EAAQkB,EAAE/B,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,EAAEW,OAAO,GAAKkB,EAAER,OAAS,IAC9DhE,SAASC,eAAc,eAAgBK,UAAS,4IAEUsD,EAAErC,8DAEpDqC,EAAEtB,kGAGkCsB,EAAEF,QAAQjC,MAAM,EAAG,QAAQmC,EAAEF,QAAQjC,OAAM,4DACxCmC,EAAE9B,SAASiC,cAAcvB,MAAK,MAAO,8DACnCoB,EAAElC,yBAC3C5B,UAAS,uCAA0C2E,UAAiB,4MAGdA,aAAsBC,8LAElBpB,8HAESoB,8EACTpB,2OAGpBM,EAAErC,gLAOlDoD,eAAc,KACRzF,iBACFc,SAASC,eAAc,eAAgBK,UAAS,8tCAmBgBsE,ohBAOtD9E,UAAS,gGAAiG,kLAEpEA,UAA8E,GAArE,gMAQ7D+E,YAAW,KACT7E,SAASC,eAAc,eAAgBK,UAAS,IAsClDN,SAAS8E,iBAAgB,oBAAmB,KAAUvB,YAAa,EAAM/C,OACzER,SAAS8E,iBAAgB,SAAUC,IAClB,iBAAXA,EAAEC,OAAOzD,IAAuBsD,cACrB,wBAAXE,EAAEC,OAAOzD,IAA2C,oBAAXwD,EAAEC,OAAOzD,IACpDoD,iBAEa,WAAXI,EAAEC,OAAOzD,IAxBS7B,OAAU6B,IAChCvB,SAASC,eAAc,WAAYgF,UAAW,EAC9CjF,SAASC,eAAc,eAAgBK,UAAS,6CAChD1B,SAAWA,gBAA4BP,EAAM6G,OAAOrG,GAAGC,yBAEhCF,SAASuG,QAAQC,mBAAmBpF,SAASC,eAAc,aAAcmB,MAAMK,MAAM,EAAG4D,iBAAkB7D,OAAOxB,SAASC,eAAc,eAAgBmB,OAAQ,EAAG,EAAC,KAAQkE,SAAStF,SAASC,eAAc,YAAamB,MAAMK,MAAM,GAAI,IAAK6D,SAAStF,SAASC,eAAc,YAAamB,MAAMK,MAAM,GAAI,KAAK8D,OACrUvF,SAASC,eAAc,eAAgBK,UAAS,sEACjD,MAAQjB,GACQ,WAAXA,EAAMmG,OACRxF,SAASC,eAAc,eAAgBK,UAAS,2DAChDN,SAASC,eAAc,WAAYgF,UAAW,GAE9CjF,SAASC,eAAc,eAAgBK,UAAS,yDAElDhB,QAAQC,IAAG,iEAAmEF,KAW9E+F,GAEF,MAAM7D,EAAKwD,EAAEC,OAAOzD,GAAGiB,MAAK,KACpB,aAAJjB,EAAG,IA7Ce7B,OAAU6B,IAChCvB,SAASC,eAAc,aAAcsB,KAAM0D,UAAW,EACtDjF,SAASC,eAAc,eAAgBK,UAAS,6CAChD1B,SAAWA,gBAA4BP,EAAM6G,OAAOrG,GAAGC,yBAEhCF,SAASuG,QAAQM,mBAAmBjE,OAAOD,GAAKC,OAAOxB,SAASC,eAAc,eAAgBmB,OAAQsE,KAAKC,KAA2D,IAAtDnE,OAAOxB,SAASC,eAAc,cAAemB,SAAmBmE,OACrMvF,SAASC,eAAc,eAAgBK,UAAS,sEACjD,MAAQjB,GACQ,WAAXA,EAAMmG,OACRxF,SAASC,eAAc,eAAgBK,UAAS,2DAChDN,SAASC,eAAc,aAAcsB,KAAM0D,UAAW,GAEtDjF,SAASC,eAAc,eAAgBK,UAAS,+CAElDhB,QAAQC,IAAG,iEAAmEF,KAgC9EoG,CAAmBlE,EAAG,OAG1BvB,SAAS8E,iBAAgB,SAAUC,IAClB,eAAXA,EAAEC,OAAOzD,KACXvB,SAASC,eAAc,aAAcK,UAAS,4BAA+ByE,EAAEC,OAAO5D,SAEzE,cAAX2D,EAAEC,OAAOzD,KACPwD,EAAEC,OAAO5D,MAAQ,IAAG2D,EAAEC,OAAO5D,MAAQ,GACzCpB,SAASC,eAAc,aAAcK,UAAS,mBAAsByE,EAAEC,OAAO5D,WAEhE,eAAX2D,EAAEC,OAAOzD,KACPwD,EAAEC,OAAO5D,MAAQwD,kBAAiBG,EAAEC,OAAO5D,MAAQwD,iBACnDG,EAAEC,OAAO5D,MAAQ,IAAG2D,EAAEC,OAAO5D,MAAQ,GACzCpB,SAASC,eAAc,aAAcK,UAAS,4BAA+ByE,EAAEC,OAAO5D,SAEzE,YAAX2D,EAAEC,OAAOzD,KACXvB,SAASC,eAAc,UAAW2F,MAAMC,KAAOd,EAAEC,OAAO5D,OAE3C,YAAX2D,EAAEC,OAAOzD,KACXvB,SAASC,eAAc,cAAe2F,MAAMC,KAAOd,EAAEC,OAAO5D,OAE/C,aAAX2D,EAAEC,OAAOzD,KACXvB,SAASC,eAAc,cAAeK,UAAYyE,EAAEC,OAAO5D,MAAMK,MAAM,EAAG4D,iBAAiB7C,MAAK,MAAOC,QAAM,CAAEC,EAAGC,IAAMD,EAAC,6BAAgCC","sources":["src/js/account.js"],"sourcesContent":["import { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezosOperationType } from \"@airgap/beacon-sdk\";\n\nconst Tezos = new TezosToolkit(rpc_addr);\nconst Wallet = new BeaconWallet({ name: \"Tezos Haiku\" });\nTezos.setWalletProvider(Wallet);\n\nTezos.contract.at(contract_addr)\n  .then(contract => {\n    return contract.storage()\n      .then(storage => {\n        assign_data(storage)\n        storage_loaded = true\n        check_wallet()\n      })\n  })\n  .catch(error => console.log(`Error: ${JSON.stringify(error, null, 2)}`));\n\ncheck_wallet = async () => {\n  const activeAccount = await Wallet.client.getActiveAccount();\n  if (!activeAccount) {\n    document.getElementById('main_container').innerHTML += '<h2 class=\"fw-light center\">Please, connect your wallet to see your account</h2>'\n  } else {\n    user_addr = activeAccount.address;\n    document.getElementById('wallet').onclick = () => { disconnect_wallet(); document.location.reload() }\n    document.getElementById('wallet').innerHTML = 'Disconnect or change wallet'\n    document.getElementById('main_container').innerHTML = `<h2 class=\"fw-light center\">Created haikus</h2>\n    <div id=\"nothing_crt\">\n      <div id=\"created_tokens\"></div>\n    </div>\n    <div class=\"center\">\n      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary center\" id=\"new_haiku_big_button\">ORIGINATE NEW\n        HAIKU</button>\n    </div>\n    <h2 class=\"fw-light center\">Owned haikus</h2>\n    <div id=\"nothing_own\">\n      <div id=\"owned_tokens\"></div>\n    </div>\n    <div id=\"token_popup\"></div>`\n\n    data_loaded = true\n    main_start()\n  }\n}\n\nconnect_wallet = async () => {\n  const activeAccount = await Wallet.client.getActiveAccount();\n  if (!activeAccount) {\n    const permissions = await Wallet.client.requestPermissions({\n      network: {\n        type: network,\n        rpcUrl: rpc_addr,\n      },\n    });\n    user_addr = permissions.address;\n  } else {\n    user_addr = activeAccount.address;\n  }\n  if (storage_loaded) {\n    document.getElementById('wallet').onclick = () => { disconnect_wallet(); document.location.reload() }\n    document.getElementById('wallet').innerHTML = 'Disconnect or change wallet'\n    document.getElementById('main_container').innerHTML = `<h2 class=\"fw-light center\">Created haikus</h2>\n    <div id=\"nothing_crt\">\n      <div id=\"created_tokens\"></div>\n    </div>\n    <div class=\"center\">\n      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary center\" id=\"new_haiku_big_button\">ORIGINATE NEW\n        HAIKU</button>\n    </div>\n    <h2 class=\"fw-light center\">Owned haikus</h2>\n    <div id=\"nothing_own\">\n      <div id=\"owned_tokens\"></div>\n    </div>\n    <div id=\"token_popup\"></div>`\n\n    data_loaded = true\n    main_start()\n  }\n}\n\ndisconnect_wallet = async () => await Wallet.clearActiveAccount()\n\nconst assign_data = (storage) => {\n  data.tokens = []\n  data.owners = []\n\n  for (const [key, value] of storage.token.valueMap) {\n    value.id = Number(key.slice(1, -1))\n    value.amount = Number(value.amount)\n    value.state = Number(value.state)\n    value.cnfrm_at = new Date(value.cnfrm_at)\n    value.crted_at = new Date(value.crted_at)\n    value.text_color = Number(value.text_color)\n    const c_t = { b: value.text_color % 256 }\n    c_t.g = (value.text_color - c_t.b) / 256 % 256\n    c_t.r = ((value.text_color - c_t.b) / 256 - c_t.g) / 256 % 256\n    value.back_color = Number(value.back_color)\n    const c_b = { b: value.back_color % 256 }\n    c_b.g = (value.back_color - c_b.b) / 256 % 256\n    c_b.r = ((value.back_color - c_b.b) / 256 - c_b.g) / 256 % 256\n    value.image = `<svg class=\"\" width=\"338px\" height=\"225px\" role=\"img\" focusable=\"false\">\n    <rect width=\"100%\" height=\"100%\" fill=\"rgb(${c_b.r},${c_b.g},${c_b.b})\" rx=\"0.25rem\" ry=\"0.25rem\"></rect>\n    <text y=\"20%\" fill=\"white\" font-size=\"1.2em\">\n      ${value.content.split('\\n').reduce((a, c) => a + `<tspan x=\"10%\" dy=\"1.6em\" fill=\"rgb(${c_t.r},${c_t.g},${c_t.b})\">${c}</tspan>`, \"\")}\n    </text>\n  </svg>`\n    data.tokens.push(value)\n  }\n  for (const [s_key, value] of storage.ledger.valueMap) {\n    const key = JSON.parse(s_key)\n    value.token_id = Number(key[1])\n    value.owner = key[0]\n    value.count = Number(value.count)\n    value.for_sale = Number(value.for_sale)\n    value.price = Number(value.price)\n    data.owners.push(value)\n  }\n}\n\nconst main_start = () => {\n  if (!dom_loaded || !data_loaded) return\n\n  console.log(data.tokens)\n  console.log(data.owners)\n\n  const created = data.tokens.filter(c => c.creator == user_addr).sort((a, b) => (a.state - b.state) || (b.cnfrm_at - a.cnfrm_at))\n  for (const t of created) {\n    const min_price = data.owners.filter(c => c.token_id == t.id).reduce((a, c) => a > c.price && c.for_sale > 0 ? c.price : a, Infinity)\n    document.getElementById(\"created_tokens\").innerHTML += `<div class=\"card token\" onclick=\"info_open(${t.id})\">\n      ${t.image}\n      <div class=\"card-body\" style=\"${t.state == 0 ? 'background-color: azure;' : t.state > 1 ? 'background-color: #ffdfc6;' : ''}\">\n        <p class=\"card-text\">Haiku #${t.id} written by <a style=\"font-family:monospace; font-size: initial;\">${t.creator}</a></p>\n        <b class=\"card-text\">${min_price !== Infinity ? `Price starts from <a style=\"font-family:monospace;\">${min_price / 1000000}tz</a>` : `Not for sale :(`}</b>\n        <p></p>\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <button type=\"button\" id=\"buy_button-${t.id}\" class=\"btn btn-sm btn-outline-secondary buy_button\">More</button>\n          <small class=\"text-muted\">${t.cnfrm_at.toGMTString().split(', ')[1].slice(0, -7)}</small>\n        </div>\n      </div>\n    </div>`\n  }\n  if (created.length == 0) {\n    document.getElementById(\"nothing_crt\").innerHTML = `<h3 class=\"fw-light center\">Nothing here :(</h3>`\n  }\n\n  const owner_tokens = data.owners.reduce((a, c) => { if (c.owner == user_addr) a.push(c.token_id); return a }, [])\n  const owned = data.tokens.filter(c => owner_tokens.includes(c.id)).filter(c => c.state <= 1).sort((a, b) => b.cnfrm_at - a.cnfrm_at)\n  for (const t of owned) {\n    const min_price = data.owners.filter(c => c.token_id == t.id).reduce((a, c) => a > c.price && c.for_sale > 0 ? c.price : a, Infinity)\n    document.getElementById(\"owned_tokens\").innerHTML += `<div class=\"card token\" onclick=\"sell_open(${t.id})\">\n      ${t.image}\n      <div class=\"card-body\">\n        <p class=\"card-text\">Haiku #${t.id} written by <a style=\"font-family:monospace; font-size: initial;\">${t.creator}</a></p>\n        <b class=\"card-text\">${min_price !== Infinity ? `Price starts from <a style=\"font-family:monospace;\">${min_price / 1000000}tz</a>` : `Not for sale :(`}</b>\n        <p></p>\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <button type=\"button\" id=\"buy_button-${t.id}\" class=\"btn btn-sm btn-outline-secondary buy_button\">More</button>\n          <small class=\"text-muted\">${t.cnfrm_at.toGMTString().split(', ')[1].slice(0, -7)}</small>\n        </div>\n      </div>\n    </div>`\n  }\n  if (owned.length == 0) {\n    document.getElementById(\"nothing_own\").innerHTML = `<h3 class=\"fw-light center\">Nothing here :(</h3>`\n  }\n}\n\ninfo_open = (id) => {\n  const t = data.tokens[id]\n  document.getElementById('token_popup').innerHTML = `<section id=\"popup_overlay\" class=\"overlay__\">\n    <div class=\"container__\">\n      <h1 class=\"fw-light buy_header\">Info Haiku #${t.id}</h1>\n      <div class=\"card token buy_image\">\n        ${t.image}\n      </div>\n      <div class=\"buy_body\">\n        <div class=\"card buy_card\">Creator: ${t.creator.slice(0, 7)}...${t.creator.slice(-7)}</div>\n        <div class=\"card buy_card\">Created at: ${t.crted_at.toGMTString().split(', ')[1]}</div>\n        <div class=\"card buy_card\">Status: ${statuses[t.state]}</div>\n        <div class=\"card buy_card\">Total supply: ${t.amount}</div>\n        ${user_addr ? `<div class=\"card buy_card\">You own: ${data.owners.filter(c => c.owner == user_addr && c.token_id == t.id).reduce((a, c) => a + c.count, 0)}</div>` : \"\"}\n        <div class=\"btn-group buy_btn_group\" role=\"group\">\n          <button type=\"button\" onclick=\"token_close()\" class=\"btn btn_secondary buy_cfrm_button\">CLOSE</button>\n        </div>\n      </div>\n    </div>\n  </section>`\n}\nsell_open = (id) => {\n  const t = data.tokens[id]\n  const o = data.owners.filter(c => c.owner == user_addr && c.token_id == id)\n  const max_amount = o.reduce((a, c) => a + c.count, 0)\n  const sale = o.reduce((a, c) => a + c.for_sale, 0)\n  const price = o.reduce((a, c) => a + c.price, 0) / o.length / 1000000\n  document.getElementById('token_popup').innerHTML = `<section id=\"popup_overlay\" class=\"overlay__\">\n    <div class=\"container__\">\n      <h1 class=\"fw-light buy_header\">Update price Haiku #${t.id}</h1>\n      <div class=\"card token buy_image\">\n        ${t.image}\n      </div>\n      <div class=\"buy_body\">\n        <div class=\"card buy_card\">Creator: ${t.creator.slice(0, 7)}...${t.creator.slice(-7)}</div>\n        <div class=\"card buy_card\">Created at: ${t.crted_at.toGMTString().split(', ')[1]}</div>\n        <div class=\"card buy_card\">Total supply: ${t.amount}</div>\n        ${user_addr ? `<div class=\"card buy_card\">You own: ${max_amount}</div>` : \"\"}\n        <div class=\"buy_inputs\">\n          <label for=\"sell_amount\" class=\"buy_label\">Choose how many items you want to sell</label>\n          <input type=\"range\" class=\"form_range\" min=\"0\" max=\"${max_amount}\" value=\"${sale}\" step=\"1\" id=\"sell_amount\">\n          <label for=\"sell_price\" class=\"buy_label\">Choose price for these items</label>\n          <input type=\"number\" class=\"form_number\" min=\"0\" value=\"${price}\" step=\"0.1\" id=\"sell_price\">\n        </div>\n        <div class=\"card buy_card\" id=\"sell_samt\">Selected amount to sell: ${sale}</div>\n        <div class=\"card buy_card\" id=\"sell_cost\">Selected price: ${price}tz</div>\n        <div class=\"btn-group buy_btn_group\" role=\"group\">\n          <button type=\"button\" onclick=\"token_close()\" class=\"btn btn_secondary buy_cfrm_button\">CANCEL</button>\n          <button type=\"button\" id=\"sell_cfrm-${t.id}\" class=\"btn btn_primary buy_cfrm_button\">UPDATE PRICE</button>\n        </div>\n        <p class=\"buy_note\" id=\"note_result\"></p>\n      </div>\n    </div>\n  </section>`\n}\nnew_haiku_open = () => {\n  if (storage_loaded) {\n    document.getElementById('token_popup').innerHTML = `<section id=\"popup_overlay\" class=\"overlay__\">\n      <div class=\"container__\">\n        <h1 class=\"fw-light buy_header\">New Haiku Preview</h1>\n        <div class=\"card token buy_image\">\n          <svg class=\"\" width=\"338px\" height=\"225px\" role=\"img\"\n            aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\n            <title>Placeholder</title>\n            <rect width=\"100%\" height=\"100%\" fill=\"rgb(0,0,0)\" rx=\"0.25rem\" ry=\"0.25rem\" id=\"canvas\"></rect>\n            <text y=\"20%\" fill=\"rgb(255,255,255)\" font-size=\"1.2em\" id=\"image_text\"></text>\n          </svg>\n        </div>\n        <div class=\"buy_body\">\n          <div class=\"buy_inputs\">\n            <label for=\"mint_c\" class=\"buy_label\">Choose colors of background and text</label>\n            <div class=\"card buy_card\">\n              Backgroung: <input type=\"color\" class=\"form_color\" value=\"#000000\" id=\"mint_c_b\">\n              Text: <input type=\"color\" class=\"form_color right_empty\" value=\"#ffffff\" id=\"mint_c_t\"></p>\n            </div>\n            <label for=\"mint_amount\" class=\"buy_label\">Choose how many items of haiku you want to mint</label>\n            <input type=\"number\" class=\"form_number\" min=\"1\" max=\"${max_mint_amount}\" value=\"7\" step=\"1\" id=\"mint_amount\">\n            <label for=\"mint_cont\" class=\"buy_label\">Provide yours haiku text below</label>\n            <textarea type=\"text\" class=\"form_haiku_text\" id=\"mint_cont\"></textarea>\n          </div>\n          <div class=\"card buy_card\" id=\"mint_samt\">Selected amount to mint: 7</div>\n          <div class=\"btn-group buy_btn_group\" role=\"group\">\n            <button type=\"button\" onclick=\"token_close()\" class=\"btn btn_secondary buy_cfrm_button\">CANCEL</button>\n            ${user_addr ? `<button type=\"button\" id=\"publish\" class=\"btn btn_primary buy_cfrm_button\">ORIGINATE</button>` : `<button type=\"button\" id=\"publish\" class=\"btn btn_primary buy_cfrm_button\" disabled>ORIGINATE</button>`}\n            </div>\n            <p class=\"buy_note\" id=\"note_result\">${!user_addr ? 'Please, reload the page and connect your wallet to create haikus' : ''}</p>\n          </div>\n          <p class=\"buy_note\" id=\"note_result\"></p>\n        </div>\n      </div>\n    </section>`\n  }\n}\ntoken_close = () => {\n  document.getElementById('token_popup').innerHTML = ''\n}\n\nconst token_update_price = async (id) => {\n  document.getElementById(`sell_cfrm-${id}`).disabled = true\n  document.getElementById('note_result').innerHTML = 'Please, confirm transaction in your wallet'\n  contract = contract ? contract : await Tezos.wallet.at(contract_addr);\n  try {\n    const result = await contract.methods.token_update_price(Number(id), Number(document.getElementById('sell_amount').value), Math.ceil(Number(document.getElementById('sell_price').value) * 1000000)).send();\n    document.getElementById('note_result').innerHTML = 'Your request is in work. Wait some and update page to view changes.'\n  } catch (error) {\n    if (error.title == 'Aborted') {\n      document.getElementById('note_result').innerHTML = 'Please, try again and confirm transaction in your wallet'\n      document.getElementById(`sell_cfrm-${id}`).disabled = false\n    } else {\n      document.getElementById('note_result').innerHTML = 'Something went wrong, please try again later'\n    }\n    console.log(`The contract call failed and the following error was returned:`, error);\n  }\n}\nconst token_mint_complex = async (id) => {\n  document.getElementById('publish').disabled = true\n  document.getElementById('note_result').innerHTML = 'Please, confirm transaction in your wallet'\n  contract = contract ? contract : await Tezos.wallet.at(contract_addr);\n  try {\n    const result = await contract.methods.token_mint_complex(document.getElementById('mint_cont').value.slice(0, max_mint_length), Number(document.getElementById('mint_amount').value), 0, 0, 'en', parseInt(document.getElementById('mint_c_b').value.slice(1), 16), parseInt(document.getElementById('mint_c_t').value.slice(1), 16)).send();\n    document.getElementById('note_result').innerHTML = 'Your request is in work. Wait some and update page to view changes.'\n  } catch (error) {\n    if (error.title == 'Aborted') {\n      document.getElementById('note_result').innerHTML = 'Please, try again and confirm transaction in your wallet'\n      document.getElementById('publish').disabled = false\n    } else {\n      document.getElementById('note_result').innerHTML = 'Something went wrong, please update page and try again'\n    }\n    console.log(`The contract call failed and the following error was returned:`, error);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => { dom_loaded = true; main_start() })\ndocument.addEventListener('click', e => {\n  if (e.target.id == 'popup_overlay') token_close()\n  if (e.target.id == 'new_haiku_big_button' || e.target.id == 'new_haiku_button') {\n    new_haiku_open()\n  }\n  if (e.target.id == 'publish') {\n    token_mint_complex()\n  }\n  const id = e.target.id.split('-')\n  if (id[0] == 'sell_cfrm') {\n    token_update_price(id[1])\n  }\n})\ndocument.addEventListener('input', e => {\n  if (e.target.id == 'sell_amount') {\n    document.getElementById('sell_samt').innerHTML = `Selected amount to sell: ${e.target.value}`\n  }\n  if (e.target.id == 'sell_price') {\n    if (e.target.value < 0) e.target.value = 0\n    document.getElementById('sell_cost').innerHTML = `Selected price: ${e.target.value}tz`\n  }\n  if (e.target.id == 'mint_amount') {\n    if (e.target.value > max_mint_amount) e.target.value = max_mint_amount\n    if (e.target.value < 1) e.target.value = 1\n    document.getElementById('mint_samt').innerHTML = `Selected amount to mint: ${e.target.value}`\n  }\n  if (e.target.id == 'mint_c_b') {\n    document.getElementById('canvas').style.fill = e.target.value\n  }\n  if (e.target.id == 'mint_c_t') {\n    document.getElementById('image_text').style.fill = e.target.value\n  }\n  if (e.target.id == 'mint_cont') {\n    document.getElementById('image_text').innerHTML = e.target.value.slice(0, max_mint_length).split('\\n').reduce((a, c) => a + `<tspan x=\"10%\" dy=\"1.6em\">${c}</tspan>`, \"\")\n  }\n})\n"],"names":["_taquito","require","_beaconWallet","Tezos","TezosToolkit","rpc_addr","Wallet","BeaconWallet","name","setWalletProvider","contract","at","contract_addr","then","storage","assign_data","storage_loaded","check_wallet","catch","error","console","log","JSON","stringify","async","activeAccount","client","getActiveAccount","user_addr","address","document","getElementById","onclick","disconnect_wallet","location","reload","innerHTML","data_loaded","main_start","connect_wallet","permissions","requestPermissions","network","type","rpcUrl","clearActiveAccount","data","tokens","owners","key","value","token","valueMap","id","Number","slice","amount","state","cnfrm_at","Date","crted_at","text_color","c_t","b","g","r","back_color","c_b","image","content","split","reduce","a","c","push","s_key","value1","ledger","key1","parse","token_id","owner","count","for_sale","price","dom_loaded","created","filter","creator","sort","t","min_price","Infinity","toGMTString","length","owner_tokens","owned","includes","t1","info_open","statuses","sell_open","o","max_amount","sale","new_haiku_open","max_mint_amount","token_close","addEventListener","e","target","disabled","wallet","methods","token_mint_complex","max_mint_length","parseInt","send","title","token_update_price","Math","ceil","style","fill"],"version":3,"file":"account.f19de9de.js.map"}